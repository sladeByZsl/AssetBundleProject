// Code generated by protoc-gen-go. DO NOT EDIT.
// source: level_setting.proto

package matchproto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EMatch3RecordType int32

const (
	EMatch3RecordType_MR_Swap    EMatch3RecordType = 0
	EMatch3RecordType_MR_Clear   EMatch3RecordType = 1
	EMatch3RecordType_MR_Replace EMatch3RecordType = 2
)

var EMatch3RecordType_name = map[int32]string{
	0: "MR_Swap",
	1: "MR_Clear",
	2: "MR_Replace",
}

var EMatch3RecordType_value = map[string]int32{
	"MR_Swap":    0,
	"MR_Clear":   1,
	"MR_Replace": 2,
}

func (x EMatch3RecordType) Enum() *EMatch3RecordType {
	p := new(EMatch3RecordType)
	*p = x
	return p
}

func (x EMatch3RecordType) String() string {
	return proto.EnumName(EMatch3RecordType_name, int32(x))
}

func (x *EMatch3RecordType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EMatch3RecordType_value, data, "EMatch3RecordType")
	if err != nil {
		return err
	}
	*x = EMatch3RecordType(value)
	return nil
}

func (EMatch3RecordType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e3a2cdd6fba8e77c, []int{0}
}

//import "Enemy.proto";
// 关卡配置整体结构
type PBLevelSetting struct {
	LevelId      *string                `protobuf:"bytes,1,opt,name=level_id,json=levelId" json:"level_id,omitempty"`
	LevelNum     *uint32                `protobuf:"varint,2,opt,name=level_num,json=levelNum" json:"level_num,omitempty"`
	LevelName    *string                `protobuf:"bytes,3,opt,name=level_name,json=levelName" json:"level_name,omitempty"`
	Background   *string                `protobuf:"bytes,10,opt,name=background" json:"background,omitempty"`
	LevelGoal    *PBLevelGoal           `protobuf:"bytes,4,opt,name=level_goal,json=levelGoal" json:"level_goal,omitempty"`
	Cameras      []*PBCameraInfo        `protobuf:"bytes,5,rep,name=cameras" json:"cameras,omitempty"`
	SeedInfo     *PBSeedInfo            `protobuf:"bytes,6,opt,name=seed_info,json=seedInfo" json:"seed_info,omitempty"`
	ChessBoard   *PBChessBoard          `protobuf:"bytes,8,opt,name=chess_board,json=chessBoard" json:"chess_board,omitempty"`
	PatternGroup []*PBBirthPatternGroup `protobuf:"bytes,9,rep,name=pattern_group,json=patternGroup" json:"pattern_group,omitempty"`
	//关卡中保存的全局出生掉落配置
	DropTable            []*PBBirthPattern `protobuf:"bytes,7,rep,name=drop_table,json=dropTable" json:"drop_table,omitempty"`
	Hero                 *PBLevelHero      `protobuf:"bytes,11,opt,name=hero" json:"hero,omitempty"`
	Tutorial             *PBTutorial       `protobuf:"bytes,12,opt,name=tutorial" json:"tutorial,omitempty"`
	Enemygoups           []*PBEnemyGroup   `protobuf:"bytes,13,rep,name=enemygoups" json:"enemygoups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PBLevelSetting) Reset()         { *m = PBLevelSetting{} }
func (m *PBLevelSetting) String() string { return proto.CompactTextString(m) }
func (*PBLevelSetting) ProtoMessage()    {}
func (*PBLevelSetting) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a2cdd6fba8e77c, []int{0}
}

func (m *PBLevelSetting) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBLevelSetting.Unmarshal(m, b)
}
func (m *PBLevelSetting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBLevelSetting.Marshal(b, m, deterministic)
}
func (m *PBLevelSetting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBLevelSetting.Merge(m, src)
}
func (m *PBLevelSetting) XXX_Size() int {
	return xxx_messageInfo_PBLevelSetting.Size(m)
}
func (m *PBLevelSetting) XXX_DiscardUnknown() {
	xxx_messageInfo_PBLevelSetting.DiscardUnknown(m)
}

var xxx_messageInfo_PBLevelSetting proto.InternalMessageInfo

func (m *PBLevelSetting) GetLevelId() string {
	if m != nil && m.LevelId != nil {
		return *m.LevelId
	}
	return ""
}

func (m *PBLevelSetting) GetLevelNum() uint32 {
	if m != nil && m.LevelNum != nil {
		return *m.LevelNum
	}
	return 0
}

func (m *PBLevelSetting) GetLevelName() string {
	if m != nil && m.LevelName != nil {
		return *m.LevelName
	}
	return ""
}

func (m *PBLevelSetting) GetBackground() string {
	if m != nil && m.Background != nil {
		return *m.Background
	}
	return ""
}

func (m *PBLevelSetting) GetLevelGoal() *PBLevelGoal {
	if m != nil {
		return m.LevelGoal
	}
	return nil
}

func (m *PBLevelSetting) GetCameras() []*PBCameraInfo {
	if m != nil {
		return m.Cameras
	}
	return nil
}

func (m *PBLevelSetting) GetSeedInfo() *PBSeedInfo {
	if m != nil {
		return m.SeedInfo
	}
	return nil
}

func (m *PBLevelSetting) GetChessBoard() *PBChessBoard {
	if m != nil {
		return m.ChessBoard
	}
	return nil
}

func (m *PBLevelSetting) GetPatternGroup() []*PBBirthPatternGroup {
	if m != nil {
		return m.PatternGroup
	}
	return nil
}

func (m *PBLevelSetting) GetDropTable() []*PBBirthPattern {
	if m != nil {
		return m.DropTable
	}
	return nil
}

func (m *PBLevelSetting) GetHero() *PBLevelHero {
	if m != nil {
		return m.Hero
	}
	return nil
}

func (m *PBLevelSetting) GetTutorial() *PBTutorial {
	if m != nil {
		return m.Tutorial
	}
	return nil
}

func (m *PBLevelSetting) GetEnemygoups() []*PBEnemyGroup {
	if m != nil {
		return m.Enemygoups
	}
	return nil
}

type PBMatch3Record struct {
	FrameCount           *uint32            `protobuf:"varint,1,opt,name=frame_count,json=frameCount" json:"frame_count,omitempty"`
	RecordType           *EMatch3RecordType `protobuf:"varint,2,opt,name=record_type,json=recordType,enum=FunPlus.Common.Config.EMatch3RecordType,def=0" json:"record_type,omitempty"`
	X0                   *uint32            `protobuf:"varint,3,opt,name=x0" json:"x0,omitempty"`
	Y0                   *uint32            `protobuf:"varint,4,opt,name=y0" json:"y0,omitempty"`
	X1                   *uint32            `protobuf:"varint,5,opt,name=x1" json:"x1,omitempty"`
	Y1                   *uint32            `protobuf:"varint,6,opt,name=y1" json:"y1,omitempty"`
	ChipId               *uint32            `protobuf:"varint,7,opt,name=chip_id,json=chipId" json:"chip_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *PBMatch3Record) Reset()         { *m = PBMatch3Record{} }
func (m *PBMatch3Record) String() string { return proto.CompactTextString(m) }
func (*PBMatch3Record) ProtoMessage()    {}
func (*PBMatch3Record) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a2cdd6fba8e77c, []int{1}
}

func (m *PBMatch3Record) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBMatch3Record.Unmarshal(m, b)
}
func (m *PBMatch3Record) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBMatch3Record.Marshal(b, m, deterministic)
}
func (m *PBMatch3Record) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBMatch3Record.Merge(m, src)
}
func (m *PBMatch3Record) XXX_Size() int {
	return xxx_messageInfo_PBMatch3Record.Size(m)
}
func (m *PBMatch3Record) XXX_DiscardUnknown() {
	xxx_messageInfo_PBMatch3Record.DiscardUnknown(m)
}

var xxx_messageInfo_PBMatch3Record proto.InternalMessageInfo

const Default_PBMatch3Record_RecordType EMatch3RecordType = EMatch3RecordType_MR_Swap

func (m *PBMatch3Record) GetFrameCount() uint32 {
	if m != nil && m.FrameCount != nil {
		return *m.FrameCount
	}
	return 0
}

func (m *PBMatch3Record) GetRecordType() EMatch3RecordType {
	if m != nil && m.RecordType != nil {
		return *m.RecordType
	}
	return Default_PBMatch3Record_RecordType
}

func (m *PBMatch3Record) GetX0() uint32 {
	if m != nil && m.X0 != nil {
		return *m.X0
	}
	return 0
}

func (m *PBMatch3Record) GetY0() uint32 {
	if m != nil && m.Y0 != nil {
		return *m.Y0
	}
	return 0
}

func (m *PBMatch3Record) GetX1() uint32 {
	if m != nil && m.X1 != nil {
		return *m.X1
	}
	return 0
}

func (m *PBMatch3Record) GetY1() uint32 {
	if m != nil && m.Y1 != nil {
		return *m.Y1
	}
	return 0
}

func (m *PBMatch3Record) GetChipId() uint32 {
	if m != nil && m.ChipId != nil {
		return *m.ChipId
	}
	return 0
}

type PBMatch3Replay struct {
	LevelFolder          *string           `protobuf:"bytes,1,opt,name=level_folder,json=levelFolder" json:"level_folder,omitempty"`
	LevelId              *string           `protobuf:"bytes,2,opt,name=level_id,json=levelId" json:"level_id,omitempty"`
	LevelName            *string           `protobuf:"bytes,3,opt,name=level_name,json=levelName" json:"level_name,omitempty"`
	Seed                 *uint32           `protobuf:"varint,4,opt,name=seed" json:"seed,omitempty"`
	Records              []*PBMatch3Record `protobuf:"bytes,5,rep,name=records" json:"records,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PBMatch3Replay) Reset()         { *m = PBMatch3Replay{} }
func (m *PBMatch3Replay) String() string { return proto.CompactTextString(m) }
func (*PBMatch3Replay) ProtoMessage()    {}
func (*PBMatch3Replay) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a2cdd6fba8e77c, []int{2}
}

func (m *PBMatch3Replay) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBMatch3Replay.Unmarshal(m, b)
}
func (m *PBMatch3Replay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBMatch3Replay.Marshal(b, m, deterministic)
}
func (m *PBMatch3Replay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBMatch3Replay.Merge(m, src)
}
func (m *PBMatch3Replay) XXX_Size() int {
	return xxx_messageInfo_PBMatch3Replay.Size(m)
}
func (m *PBMatch3Replay) XXX_DiscardUnknown() {
	xxx_messageInfo_PBMatch3Replay.DiscardUnknown(m)
}

var xxx_messageInfo_PBMatch3Replay proto.InternalMessageInfo

func (m *PBMatch3Replay) GetLevelFolder() string {
	if m != nil && m.LevelFolder != nil {
		return *m.LevelFolder
	}
	return ""
}

func (m *PBMatch3Replay) GetLevelId() string {
	if m != nil && m.LevelId != nil {
		return *m.LevelId
	}
	return ""
}

func (m *PBMatch3Replay) GetLevelName() string {
	if m != nil && m.LevelName != nil {
		return *m.LevelName
	}
	return ""
}

func (m *PBMatch3Replay) GetSeed() uint32 {
	if m != nil && m.Seed != nil {
		return *m.Seed
	}
	return 0
}

func (m *PBMatch3Replay) GetRecords() []*PBMatch3Record {
	if m != nil {
		return m.Records
	}
	return nil
}

// 棋子出生模式组
type PBBirthPatternGroup struct {
	BirthType            *EChipType        `protobuf:"varint,1,opt,name=birth_type,json=birthType,enum=FunPlus.Common.Config.EChipType,def=0" json:"birth_type,omitempty"`
	BirthPattern         []*PBBirthPattern `protobuf:"bytes,2,rep,name=birth_pattern,json=birthPattern" json:"birth_pattern,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PBBirthPatternGroup) Reset()         { *m = PBBirthPatternGroup{} }
func (m *PBBirthPatternGroup) String() string { return proto.CompactTextString(m) }
func (*PBBirthPatternGroup) ProtoMessage()    {}
func (*PBBirthPatternGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a2cdd6fba8e77c, []int{3}
}

func (m *PBBirthPatternGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBBirthPatternGroup.Unmarshal(m, b)
}
func (m *PBBirthPatternGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBBirthPatternGroup.Marshal(b, m, deterministic)
}
func (m *PBBirthPatternGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBBirthPatternGroup.Merge(m, src)
}
func (m *PBBirthPatternGroup) XXX_Size() int {
	return xxx_messageInfo_PBBirthPatternGroup.Size(m)
}
func (m *PBBirthPatternGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_PBBirthPatternGroup.DiscardUnknown(m)
}

var xxx_messageInfo_PBBirthPatternGroup proto.InternalMessageInfo

const Default_PBBirthPatternGroup_BirthType EChipType = EChipType_CT_None

func (m *PBBirthPatternGroup) GetBirthType() EChipType {
	if m != nil && m.BirthType != nil {
		return *m.BirthType
	}
	return Default_PBBirthPatternGroup_BirthType
}

func (m *PBBirthPatternGroup) GetBirthPattern() []*PBBirthPattern {
	if m != nil {
		return m.BirthPattern
	}
	return nil
}

// 关卡完成目标
type PBLevelGoal struct {
	LimitSeconds         *uint32         `protobuf:"varint,1,opt,name=limit_seconds,json=limitSeconds,def=0" json:"limit_seconds,omitempty"`
	LimitSteps           *uint32         `protobuf:"varint,2,opt,name=limit_steps,json=limitSteps,def=0" json:"limit_steps,omitempty"`
	Collections          []*PBCollection `protobuf:"bytes,3,rep,name=collections" json:"collections,omitempty"`
	StarScores           []uint32        `protobuf:"varint,4,rep,name=star_scores,json=starScores" json:"star_scores,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PBLevelGoal) Reset()         { *m = PBLevelGoal{} }
func (m *PBLevelGoal) String() string { return proto.CompactTextString(m) }
func (*PBLevelGoal) ProtoMessage()    {}
func (*PBLevelGoal) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a2cdd6fba8e77c, []int{4}
}

func (m *PBLevelGoal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBLevelGoal.Unmarshal(m, b)
}
func (m *PBLevelGoal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBLevelGoal.Marshal(b, m, deterministic)
}
func (m *PBLevelGoal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBLevelGoal.Merge(m, src)
}
func (m *PBLevelGoal) XXX_Size() int {
	return xxx_messageInfo_PBLevelGoal.Size(m)
}
func (m *PBLevelGoal) XXX_DiscardUnknown() {
	xxx_messageInfo_PBLevelGoal.DiscardUnknown(m)
}

var xxx_messageInfo_PBLevelGoal proto.InternalMessageInfo

const Default_PBLevelGoal_LimitSeconds uint32 = 0
const Default_PBLevelGoal_LimitSteps uint32 = 0

func (m *PBLevelGoal) GetLimitSeconds() uint32 {
	if m != nil && m.LimitSeconds != nil {
		return *m.LimitSeconds
	}
	return Default_PBLevelGoal_LimitSeconds
}

func (m *PBLevelGoal) GetLimitSteps() uint32 {
	if m != nil && m.LimitSteps != nil {
		return *m.LimitSteps
	}
	return Default_PBLevelGoal_LimitSteps
}

func (m *PBLevelGoal) GetCollections() []*PBCollection {
	if m != nil {
		return m.Collections
	}
	return nil
}

func (m *PBLevelGoal) GetStarScores() []uint32 {
	if m != nil {
		return m.StarScores
	}
	return nil
}

// 采集信息
type PBCollection struct {
	ChipId               *uint32  `protobuf:"varint,1,opt,name=chip_id,json=chipId" json:"chip_id,omitempty"`
	Number               *uint32  `protobuf:"varint,2,opt,name=number" json:"number,omitempty"`
	Weight               *uint32  `protobuf:"varint,3,opt,name=weight" json:"weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PBCollection) Reset()         { *m = PBCollection{} }
func (m *PBCollection) String() string { return proto.CompactTextString(m) }
func (*PBCollection) ProtoMessage()    {}
func (*PBCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a2cdd6fba8e77c, []int{5}
}

func (m *PBCollection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBCollection.Unmarshal(m, b)
}
func (m *PBCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBCollection.Marshal(b, m, deterministic)
}
func (m *PBCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBCollection.Merge(m, src)
}
func (m *PBCollection) XXX_Size() int {
	return xxx_messageInfo_PBCollection.Size(m)
}
func (m *PBCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_PBCollection.DiscardUnknown(m)
}

var xxx_messageInfo_PBCollection proto.InternalMessageInfo

func (m *PBCollection) GetChipId() uint32 {
	if m != nil && m.ChipId != nil {
		return *m.ChipId
	}
	return 0
}

func (m *PBCollection) GetNumber() uint32 {
	if m != nil && m.Number != nil {
		return *m.Number
	}
	return 0
}

func (m *PBCollection) GetWeight() uint32 {
	if m != nil && m.Weight != nil {
		return *m.Weight
	}
	return 0
}

// 摄像机信息
type PBCameraInfo struct {
	PosMin               *PBCellPos `protobuf:"bytes,1,opt,name=pos_min,json=posMin" json:"pos_min,omitempty"`
	PosMax               *PBCellPos `protobuf:"bytes,2,opt,name=pos_max,json=posMax" json:"pos_max,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *PBCameraInfo) Reset()         { *m = PBCameraInfo{} }
func (m *PBCameraInfo) String() string { return proto.CompactTextString(m) }
func (*PBCameraInfo) ProtoMessage()    {}
func (*PBCameraInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a2cdd6fba8e77c, []int{6}
}

func (m *PBCameraInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBCameraInfo.Unmarshal(m, b)
}
func (m *PBCameraInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBCameraInfo.Marshal(b, m, deterministic)
}
func (m *PBCameraInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBCameraInfo.Merge(m, src)
}
func (m *PBCameraInfo) XXX_Size() int {
	return xxx_messageInfo_PBCameraInfo.Size(m)
}
func (m *PBCameraInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PBCameraInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PBCameraInfo proto.InternalMessageInfo

func (m *PBCameraInfo) GetPosMin() *PBCellPos {
	if m != nil {
		return m.PosMin
	}
	return nil
}

func (m *PBCameraInfo) GetPosMax() *PBCellPos {
	if m != nil {
		return m.PosMax
	}
	return nil
}

// 可选的种子信息
type PBSeedInfo struct {
	FixedSeed            *uint32   `protobuf:"varint,1,opt,name=fixed_seed,json=fixedSeed" json:"fixed_seed,omitempty"`
	AlternativeSeed      []*PBSeed `protobuf:"bytes,2,rep,name=alternative_seed,json=alternativeSeed" json:"alternative_seed,omitempty"`
	SeedNum              *uint32   `protobuf:"varint,3,opt,name=seed_num,json=seedNum" json:"seed_num,omitempty"`
	UsedSeedList         []uint32  `protobuf:"varint,4,rep,name=used_seed_list,json=usedSeedList" json:"used_seed_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *PBSeedInfo) Reset()         { *m = PBSeedInfo{} }
func (m *PBSeedInfo) String() string { return proto.CompactTextString(m) }
func (*PBSeedInfo) ProtoMessage()    {}
func (*PBSeedInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a2cdd6fba8e77c, []int{7}
}

func (m *PBSeedInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBSeedInfo.Unmarshal(m, b)
}
func (m *PBSeedInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBSeedInfo.Marshal(b, m, deterministic)
}
func (m *PBSeedInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBSeedInfo.Merge(m, src)
}
func (m *PBSeedInfo) XXX_Size() int {
	return xxx_messageInfo_PBSeedInfo.Size(m)
}
func (m *PBSeedInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PBSeedInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PBSeedInfo proto.InternalMessageInfo

func (m *PBSeedInfo) GetFixedSeed() uint32 {
	if m != nil && m.FixedSeed != nil {
		return *m.FixedSeed
	}
	return 0
}

func (m *PBSeedInfo) GetAlternativeSeed() []*PBSeed {
	if m != nil {
		return m.AlternativeSeed
	}
	return nil
}

func (m *PBSeedInfo) GetSeedNum() uint32 {
	if m != nil && m.SeedNum != nil {
		return *m.SeedNum
	}
	return 0
}

func (m *PBSeedInfo) GetUsedSeedList() []uint32 {
	if m != nil {
		return m.UsedSeedList
	}
	return nil
}

// 单个种子信息
type PBSeed struct {
	Seed                 *uint32  `protobuf:"varint,1,opt,name=seed" json:"seed,omitempty"`
	SeedName             *string  `protobuf:"bytes,2,opt,name=seed_name,json=seedName" json:"seed_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PBSeed) Reset()         { *m = PBSeed{} }
func (m *PBSeed) String() string { return proto.CompactTextString(m) }
func (*PBSeed) ProtoMessage()    {}
func (*PBSeed) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a2cdd6fba8e77c, []int{8}
}

func (m *PBSeed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBSeed.Unmarshal(m, b)
}
func (m *PBSeed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBSeed.Marshal(b, m, deterministic)
}
func (m *PBSeed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBSeed.Merge(m, src)
}
func (m *PBSeed) XXX_Size() int {
	return xxx_messageInfo_PBSeed.Size(m)
}
func (m *PBSeed) XXX_DiscardUnknown() {
	xxx_messageInfo_PBSeed.DiscardUnknown(m)
}

var xxx_messageInfo_PBSeed proto.InternalMessageInfo

func (m *PBSeed) GetSeed() uint32 {
	if m != nil && m.Seed != nil {
		return *m.Seed
	}
	return 0
}

func (m *PBSeed) GetSeedName() string {
	if m != nil && m.SeedName != nil {
		return *m.SeedName
	}
	return ""
}

// 棋盘信息
type PBChessBoard struct {
	Width                *int32    `protobuf:"varint,1,opt,name=width" json:"width,omitempty"`
	Height               *int32    `protobuf:"varint,2,opt,name=height" json:"height,omitempty"`
	OffsetX              *int32    `protobuf:"varint,3,opt,name=offset_x,json=offsetX" json:"offset_x,omitempty"`
	OffsetY              *int32    `protobuf:"varint,4,opt,name=offset_y,json=offsetY" json:"offset_y,omitempty"`
	DefaultGravity       *ESide    `protobuf:"varint,6,opt,name=default_gravity,json=defaultGravity,enum=FunPlus.Common.Config.ESide,def=0" json:"default_gravity,omitempty"`
	Cells                []*PBCell `protobuf:"bytes,5,rep,name=cells" json:"cells,omitempty"`
	FallingInit          *bool     `protobuf:"varint,7,opt,name=falling_init,json=fallingInit,def=0" json:"falling_init,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *PBChessBoard) Reset()         { *m = PBChessBoard{} }
func (m *PBChessBoard) String() string { return proto.CompactTextString(m) }
func (*PBChessBoard) ProtoMessage()    {}
func (*PBChessBoard) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a2cdd6fba8e77c, []int{9}
}

func (m *PBChessBoard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBChessBoard.Unmarshal(m, b)
}
func (m *PBChessBoard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBChessBoard.Marshal(b, m, deterministic)
}
func (m *PBChessBoard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBChessBoard.Merge(m, src)
}
func (m *PBChessBoard) XXX_Size() int {
	return xxx_messageInfo_PBChessBoard.Size(m)
}
func (m *PBChessBoard) XXX_DiscardUnknown() {
	xxx_messageInfo_PBChessBoard.DiscardUnknown(m)
}

var xxx_messageInfo_PBChessBoard proto.InternalMessageInfo

const Default_PBChessBoard_DefaultGravity ESide = ESide_Side_Bottom
const Default_PBChessBoard_FallingInit bool = false

func (m *PBChessBoard) GetWidth() int32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *PBChessBoard) GetHeight() int32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

func (m *PBChessBoard) GetOffsetX() int32 {
	if m != nil && m.OffsetX != nil {
		return *m.OffsetX
	}
	return 0
}

func (m *PBChessBoard) GetOffsetY() int32 {
	if m != nil && m.OffsetY != nil {
		return *m.OffsetY
	}
	return 0
}

func (m *PBChessBoard) GetDefaultGravity() ESide {
	if m != nil && m.DefaultGravity != nil {
		return *m.DefaultGravity
	}
	return Default_PBChessBoard_DefaultGravity
}

func (m *PBChessBoard) GetCells() []*PBCell {
	if m != nil {
		return m.Cells
	}
	return nil
}

func (m *PBChessBoard) GetFallingInit() bool {
	if m != nil && m.FallingInit != nil {
		return *m.FallingInit
	}
	return Default_PBChessBoard_FallingInit
}

// 格子
type PBCell struct {
	IsActive             *bool             `protobuf:"varint,1,opt,name=is_active,json=isActive,def=0" json:"is_active,omitempty"`
	Pos                  *PBCellPos        `protobuf:"bytes,2,opt,name=pos" json:"pos,omitempty"`
	CellLayer            []*PBCellLayer    `protobuf:"bytes,3,rep,name=cell_layer,json=cellLayer" json:"cell_layer,omitempty"`
	InitChipId           *uint32           `protobuf:"varint,4,opt,name=init_chip_id,json=initChipId" json:"init_chip_id,omitempty"`
	BirthPoint           *PBBirthPattern   `protobuf:"bytes,12,opt,name=birth_point,json=birthPoint" json:"birth_point,omitempty"`
	InitPoint            *PBBirthPattern   `protobuf:"bytes,19,opt,name=init_point,json=initPoint" json:"init_point,omitempty"`
	CollectionPoint      *bool             `protobuf:"varint,17,opt,name=collection_point,json=collectionPoint,def=0" json:"collection_point,omitempty"`
	GravitySide          *ESide            `protobuf:"varint,5,opt,name=gravity_side,json=gravitySide,enum=FunPlus.Common.Config.ESide,def=0" json:"gravity_side,omitempty"`
	Teleporter           *PBCellPos        `protobuf:"bytes,6,opt,name=teleporter" json:"teleporter,omitempty"`
	TeleportDesPoint     *bool             `protobuf:"varint,7,opt,name=teleport_des_point,json=teleportDesPoint,def=0" json:"teleport_des_point,omitempty"`
	RightWall            *bool             `protobuf:"varint,10,opt,name=right_wall,json=rightWall,def=0" json:"right_wall,omitempty"`
	BottomWall           *bool             `protobuf:"varint,11,opt,name=bottom_wall,json=bottomWall,def=0" json:"bottom_wall,omitempty"`
	DropPoint            []*PBBirthPattern `protobuf:"bytes,18,rep,name=drop_point,json=dropPoint" json:"drop_point,omitempty"`
	BeltTranslatePos     *PBCellPos        `protobuf:"bytes,20,opt,name=BeltTranslatePos,json=beltTranslatePos" json:"BeltTranslatePos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PBCell) Reset()         { *m = PBCell{} }
func (m *PBCell) String() string { return proto.CompactTextString(m) }
func (*PBCell) ProtoMessage()    {}
func (*PBCell) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a2cdd6fba8e77c, []int{10}
}

func (m *PBCell) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBCell.Unmarshal(m, b)
}
func (m *PBCell) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBCell.Marshal(b, m, deterministic)
}
func (m *PBCell) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBCell.Merge(m, src)
}
func (m *PBCell) XXX_Size() int {
	return xxx_messageInfo_PBCell.Size(m)
}
func (m *PBCell) XXX_DiscardUnknown() {
	xxx_messageInfo_PBCell.DiscardUnknown(m)
}

var xxx_messageInfo_PBCell proto.InternalMessageInfo

const Default_PBCell_IsActive bool = false
const Default_PBCell_CollectionPoint bool = false
const Default_PBCell_GravitySide ESide = ESide_Side_Bottom
const Default_PBCell_TeleportDesPoint bool = false
const Default_PBCell_RightWall bool = false
const Default_PBCell_BottomWall bool = false

func (m *PBCell) GetIsActive() bool {
	if m != nil && m.IsActive != nil {
		return *m.IsActive
	}
	return Default_PBCell_IsActive
}

func (m *PBCell) GetPos() *PBCellPos {
	if m != nil {
		return m.Pos
	}
	return nil
}

func (m *PBCell) GetCellLayer() []*PBCellLayer {
	if m != nil {
		return m.CellLayer
	}
	return nil
}

func (m *PBCell) GetInitChipId() uint32 {
	if m != nil && m.InitChipId != nil {
		return *m.InitChipId
	}
	return 0
}

func (m *PBCell) GetBirthPoint() *PBBirthPattern {
	if m != nil {
		return m.BirthPoint
	}
	return nil
}

func (m *PBCell) GetInitPoint() *PBBirthPattern {
	if m != nil {
		return m.InitPoint
	}
	return nil
}

func (m *PBCell) GetCollectionPoint() bool {
	if m != nil && m.CollectionPoint != nil {
		return *m.CollectionPoint
	}
	return Default_PBCell_CollectionPoint
}

func (m *PBCell) GetGravitySide() ESide {
	if m != nil && m.GravitySide != nil {
		return *m.GravitySide
	}
	return Default_PBCell_GravitySide
}

func (m *PBCell) GetTeleporter() *PBCellPos {
	if m != nil {
		return m.Teleporter
	}
	return nil
}

func (m *PBCell) GetTeleportDesPoint() bool {
	if m != nil && m.TeleportDesPoint != nil {
		return *m.TeleportDesPoint
	}
	return Default_PBCell_TeleportDesPoint
}

func (m *PBCell) GetRightWall() bool {
	if m != nil && m.RightWall != nil {
		return *m.RightWall
	}
	return Default_PBCell_RightWall
}

func (m *PBCell) GetBottomWall() bool {
	if m != nil && m.BottomWall != nil {
		return *m.BottomWall
	}
	return Default_PBCell_BottomWall
}

func (m *PBCell) GetDropPoint() []*PBBirthPattern {
	if m != nil {
		return m.DropPoint
	}
	return nil
}

func (m *PBCell) GetBeltTranslatePos() *PBCellPos {
	if m != nil {
		return m.BeltTranslatePos
	}
	return nil
}

// 编辑器保存的cell层级信息
type PBCellLayer struct {
	ChipId         *uint32        `protobuf:"varint,1,opt,name=chip_id,json=chipId" json:"chip_id,omitempty"`
	BlockGrade     *int32         `protobuf:"varint,2,opt,name=block_grade,json=blockGrade,def=0" json:"block_grade,omitempty"`
	Sides          []*PBLayerSide `protobuf:"bytes,3,rep,name=sides" json:"sides,omitempty"`
	BirthPatternId *uint32        `protobuf:"varint,5,opt,name=birth_pattern_id,json=birthPatternId" json:"birth_pattern_id,omitempty"`
	//optional PBBirthPattern birth_point	= 6;//出生点信息，支持只保存ID，从本关卡全局配置里获取具体掉落信息(目前没用)
	//optional PBCellPos drop_pos			= 7;//所使用的掉落点cell位置(目前没用)
	Havedoor             *bool        `protobuf:"varint,9,opt,name=havedoor" json:"havedoor,omitempty"`
	GroupInfo            *PBGroupInfo `protobuf:"bytes,8,opt,name=group_info,json=groupInfo" json:"group_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PBCellLayer) Reset()         { *m = PBCellLayer{} }
func (m *PBCellLayer) String() string { return proto.CompactTextString(m) }
func (*PBCellLayer) ProtoMessage()    {}
func (*PBCellLayer) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a2cdd6fba8e77c, []int{11}
}

func (m *PBCellLayer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBCellLayer.Unmarshal(m, b)
}
func (m *PBCellLayer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBCellLayer.Marshal(b, m, deterministic)
}
func (m *PBCellLayer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBCellLayer.Merge(m, src)
}
func (m *PBCellLayer) XXX_Size() int {
	return xxx_messageInfo_PBCellLayer.Size(m)
}
func (m *PBCellLayer) XXX_DiscardUnknown() {
	xxx_messageInfo_PBCellLayer.DiscardUnknown(m)
}

var xxx_messageInfo_PBCellLayer proto.InternalMessageInfo

const Default_PBCellLayer_BlockGrade int32 = 0

func (m *PBCellLayer) GetChipId() uint32 {
	if m != nil && m.ChipId != nil {
		return *m.ChipId
	}
	return 0
}

func (m *PBCellLayer) GetBlockGrade() int32 {
	if m != nil && m.BlockGrade != nil {
		return *m.BlockGrade
	}
	return Default_PBCellLayer_BlockGrade
}

func (m *PBCellLayer) GetSides() []*PBLayerSide {
	if m != nil {
		return m.Sides
	}
	return nil
}

func (m *PBCellLayer) GetBirthPatternId() uint32 {
	if m != nil && m.BirthPatternId != nil {
		return *m.BirthPatternId
	}
	return 0
}

func (m *PBCellLayer) GetHavedoor() bool {
	if m != nil && m.Havedoor != nil {
		return *m.Havedoor
	}
	return false
}

func (m *PBCellLayer) GetGroupInfo() *PBGroupInfo {
	if m != nil {
		return m.GroupInfo
	}
	return nil
}

// 棋子(墙、水管等)各个方向的信息结构
type PBLayerSide struct {
	Grade                *int32   `protobuf:"varint,1,opt,name=grade" json:"grade,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PBLayerSide) Reset()         { *m = PBLayerSide{} }
func (m *PBLayerSide) String() string { return proto.CompactTextString(m) }
func (*PBLayerSide) ProtoMessage()    {}
func (*PBLayerSide) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a2cdd6fba8e77c, []int{12}
}

func (m *PBLayerSide) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBLayerSide.Unmarshal(m, b)
}
func (m *PBLayerSide) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBLayerSide.Marshal(b, m, deterministic)
}
func (m *PBLayerSide) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBLayerSide.Merge(m, src)
}
func (m *PBLayerSide) XXX_Size() int {
	return xxx_messageInfo_PBLayerSide.Size(m)
}
func (m *PBLayerSide) XXX_DiscardUnknown() {
	xxx_messageInfo_PBLayerSide.DiscardUnknown(m)
}

var xxx_messageInfo_PBLayerSide proto.InternalMessageInfo

func (m *PBLayerSide) GetGrade() int32 {
	if m != nil && m.Grade != nil {
		return *m.Grade
	}
	return 0
}

type PBGroupInfo struct {
	Group                *int32   `protobuf:"varint,1,opt,name=group" json:"group,omitempty"`
	Index                *int32   `protobuf:"varint,2,opt,name=index" json:"index,omitempty"`
	Count                *int32   `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PBGroupInfo) Reset()         { *m = PBGroupInfo{} }
func (m *PBGroupInfo) String() string { return proto.CompactTextString(m) }
func (*PBGroupInfo) ProtoMessage()    {}
func (*PBGroupInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a2cdd6fba8e77c, []int{13}
}

func (m *PBGroupInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBGroupInfo.Unmarshal(m, b)
}
func (m *PBGroupInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBGroupInfo.Marshal(b, m, deterministic)
}
func (m *PBGroupInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBGroupInfo.Merge(m, src)
}
func (m *PBGroupInfo) XXX_Size() int {
	return xxx_messageInfo_PBGroupInfo.Size(m)
}
func (m *PBGroupInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PBGroupInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PBGroupInfo proto.InternalMessageInfo

func (m *PBGroupInfo) GetGroup() int32 {
	if m != nil && m.Group != nil {
		return *m.Group
	}
	return 0
}

func (m *PBGroupInfo) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *PBGroupInfo) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

// 棋子出生点模式配置
type PBBirthPattern struct {
	PatternId   *uint32    `protobuf:"varint,1,opt,name=pattern_id,json=patternId" json:"pattern_id,omitempty"`
	PatternType *EChipType `protobuf:"varint,2,opt,name=pattern_type,json=patternType,enum=FunPlus.Common.Config.EChipType,def=0" json:"pattern_type,omitempty"`
	// 以下掉落两种方式有且只能存在一种，同事存在时，掉落表优先有效
	Chips                []*PBChipInfo `protobuf:"bytes,4,rep,name=chips" json:"chips,omitempty"`
	Link                 *int32        `protobuf:"varint,6,opt,name=link" json:"link,omitempty"`
	MaxDrop              *int32        `protobuf:"varint,7,opt,name=max_drop,json=maxDrop" json:"max_drop,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PBBirthPattern) Reset()         { *m = PBBirthPattern{} }
func (m *PBBirthPattern) String() string { return proto.CompactTextString(m) }
func (*PBBirthPattern) ProtoMessage()    {}
func (*PBBirthPattern) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a2cdd6fba8e77c, []int{14}
}

func (m *PBBirthPattern) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBBirthPattern.Unmarshal(m, b)
}
func (m *PBBirthPattern) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBBirthPattern.Marshal(b, m, deterministic)
}
func (m *PBBirthPattern) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBBirthPattern.Merge(m, src)
}
func (m *PBBirthPattern) XXX_Size() int {
	return xxx_messageInfo_PBBirthPattern.Size(m)
}
func (m *PBBirthPattern) XXX_DiscardUnknown() {
	xxx_messageInfo_PBBirthPattern.DiscardUnknown(m)
}

var xxx_messageInfo_PBBirthPattern proto.InternalMessageInfo

const Default_PBBirthPattern_PatternType EChipType = EChipType_CT_None

func (m *PBBirthPattern) GetPatternId() uint32 {
	if m != nil && m.PatternId != nil {
		return *m.PatternId
	}
	return 0
}

func (m *PBBirthPattern) GetPatternType() EChipType {
	if m != nil && m.PatternType != nil {
		return *m.PatternType
	}
	return Default_PBBirthPattern_PatternType
}

func (m *PBBirthPattern) GetChips() []*PBChipInfo {
	if m != nil {
		return m.Chips
	}
	return nil
}

func (m *PBBirthPattern) GetLink() int32 {
	if m != nil && m.Link != nil {
		return *m.Link
	}
	return 0
}

func (m *PBBirthPattern) GetMaxDrop() int32 {
	if m != nil && m.MaxDrop != nil {
		return *m.MaxDrop
	}
	return 0
}

// 出生点单个棋子掉落权重，所有棋子权重总和作为总的掉落权重
type PBChipInfo struct {
	ChipId               *uint32  `protobuf:"varint,1,opt,name=chip_id,json=chipId" json:"chip_id,omitempty"`
	Grade                *uint32  `protobuf:"varint,2,opt,name=grade" json:"grade,omitempty"`
	Weight               *uint32  `protobuf:"varint,3,opt,name=weight,def=0" json:"weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PBChipInfo) Reset()         { *m = PBChipInfo{} }
func (m *PBChipInfo) String() string { return proto.CompactTextString(m) }
func (*PBChipInfo) ProtoMessage()    {}
func (*PBChipInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a2cdd6fba8e77c, []int{15}
}

func (m *PBChipInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBChipInfo.Unmarshal(m, b)
}
func (m *PBChipInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBChipInfo.Marshal(b, m, deterministic)
}
func (m *PBChipInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBChipInfo.Merge(m, src)
}
func (m *PBChipInfo) XXX_Size() int {
	return xxx_messageInfo_PBChipInfo.Size(m)
}
func (m *PBChipInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PBChipInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PBChipInfo proto.InternalMessageInfo

const Default_PBChipInfo_Weight uint32 = 0

func (m *PBChipInfo) GetChipId() uint32 {
	if m != nil && m.ChipId != nil {
		return *m.ChipId
	}
	return 0
}

func (m *PBChipInfo) GetGrade() uint32 {
	if m != nil && m.Grade != nil {
		return *m.Grade
	}
	return 0
}

func (m *PBChipInfo) GetWeight() uint32 {
	if m != nil && m.Weight != nil {
		return *m.Weight
	}
	return Default_PBChipInfo_Weight
}

type PBEnemyGroup struct {
	EnemyType            *string  `protobuf:"bytes,1,opt,name=enemy_type,json=enemyType" json:"enemy_type,omitempty"`
	Enemys               []int32  `protobuf:"varint,2,rep,name=enemys" json:"enemys,omitempty"`
	TeamPosList          []string `protobuf:"bytes,3,rep,name=team_pos_list,json=teamPosList" json:"team_pos_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PBEnemyGroup) Reset()         { *m = PBEnemyGroup{} }
func (m *PBEnemyGroup) String() string { return proto.CompactTextString(m) }
func (*PBEnemyGroup) ProtoMessage()    {}
func (*PBEnemyGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a2cdd6fba8e77c, []int{16}
}

func (m *PBEnemyGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBEnemyGroup.Unmarshal(m, b)
}
func (m *PBEnemyGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBEnemyGroup.Marshal(b, m, deterministic)
}
func (m *PBEnemyGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBEnemyGroup.Merge(m, src)
}
func (m *PBEnemyGroup) XXX_Size() int {
	return xxx_messageInfo_PBEnemyGroup.Size(m)
}
func (m *PBEnemyGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_PBEnemyGroup.DiscardUnknown(m)
}

var xxx_messageInfo_PBEnemyGroup proto.InternalMessageInfo

func (m *PBEnemyGroup) GetEnemyType() string {
	if m != nil && m.EnemyType != nil {
		return *m.EnemyType
	}
	return ""
}

func (m *PBEnemyGroup) GetEnemys() []int32 {
	if m != nil {
		return m.Enemys
	}
	return nil
}

func (m *PBEnemyGroup) GetTeamPosList() []string {
	if m != nil {
		return m.TeamPosList
	}
	return nil
}

func init() {
	proto.RegisterEnum("FunPlus.Common.Config.EMatch3RecordType", EMatch3RecordType_name, EMatch3RecordType_value)
	proto.RegisterType((*PBLevelSetting)(nil), "FunPlus.Common.Config.PBLevelSetting")
	proto.RegisterType((*PBMatch3Record)(nil), "FunPlus.Common.Config.PBMatch3Record")
	proto.RegisterType((*PBMatch3Replay)(nil), "FunPlus.Common.Config.PBMatch3Replay")
	proto.RegisterType((*PBBirthPatternGroup)(nil), "FunPlus.Common.Config.PBBirthPatternGroup")
	proto.RegisterType((*PBLevelGoal)(nil), "FunPlus.Common.Config.PBLevelGoal")
	proto.RegisterType((*PBCollection)(nil), "FunPlus.Common.Config.PBCollection")
	proto.RegisterType((*PBCameraInfo)(nil), "FunPlus.Common.Config.PBCameraInfo")
	proto.RegisterType((*PBSeedInfo)(nil), "FunPlus.Common.Config.PBSeedInfo")
	proto.RegisterType((*PBSeed)(nil), "FunPlus.Common.Config.PBSeed")
	proto.RegisterType((*PBChessBoard)(nil), "FunPlus.Common.Config.PBChessBoard")
	proto.RegisterType((*PBCell)(nil), "FunPlus.Common.Config.PBCell")
	proto.RegisterType((*PBCellLayer)(nil), "FunPlus.Common.Config.PBCellLayer")
	proto.RegisterType((*PBLayerSide)(nil), "FunPlus.Common.Config.PBLayerSide")
	proto.RegisterType((*PBGroupInfo)(nil), "FunPlus.Common.Config.PBGroupInfo")
	proto.RegisterType((*PBBirthPattern)(nil), "FunPlus.Common.Config.PBBirthPattern")
	proto.RegisterType((*PBChipInfo)(nil), "FunPlus.Common.Config.PBChipInfo")
	proto.RegisterType((*PBEnemyGroup)(nil), "FunPlus.Common.Config.PBEnemyGroup")
}

func init() { proto.RegisterFile("level_setting.proto", fileDescriptor_e3a2cdd6fba8e77c) }

var fileDescriptor_e3a2cdd6fba8e77c = []byte{
	// 1609 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x57, 0x4f, 0x6f, 0xdb, 0xc8,
	0x15, 0xaf, 0xe4, 0xc8, 0x92, 0x1e, 0x25, 0x47, 0x3b, 0x49, 0x53, 0x26, 0xdb, 0xb4, 0x5e, 0xee,
	0xb6, 0x30, 0xf6, 0x60, 0x38, 0x0e, 0xd0, 0x76, 0x03, 0xec, 0xb6, 0x6b, 0xe5, 0x9f, 0x0b, 0x3b,
	0x2b, 0x8c, 0x8d, 0x6e, 0xdb, 0x0b, 0x31, 0x22, 0x47, 0x12, 0x11, 0x92, 0x43, 0x70, 0x46, 0xb1,
	0x74, 0xef, 0xb5, 0x1f, 0xa3, 0xa7, 0xf6, 0xdc, 0x7b, 0xfb, 0x41, 0x7a, 0x28, 0xd0, 0xef, 0x51,
	0xbc, 0x37, 0x43, 0x9a, 0x6e, 0x23, 0xff, 0xb9, 0x10, 0xf3, 0xde, 0xbc, 0xdf, 0x9b, 0x99, 0xf7,
	0x9f, 0xf0, 0x20, 0x95, 0x1f, 0x64, 0x1a, 0x6a, 0x69, 0x4c, 0x92, 0xcf, 0xf7, 0x8b, 0x52, 0x19,
	0xc5, 0x7e, 0xf8, 0x7a, 0x99, 0x4f, 0xd2, 0xa5, 0xde, 0x1f, 0xab, 0x2c, 0x53, 0xf9, 0xfe, 0x58,
	0xe5, 0xb3, 0x64, 0xfe, 0xe4, 0x41, 0x26, 0x4c, 0xb4, 0x78, 0x1e, 0x46, 0x96, 0x4b, 0xb2, 0x4f,
	0x60, 0x21, 0x4b, 0xe5, 0xd6, 0x8f, 0x9c, 0x80, 0x59, 0x1a, 0x55, 0x26, 0x22, 0xd5, 0x96, 0x1f,
	0xfc, 0xbb, 0x03, 0x3b, 0x93, 0xa3, 0x13, 0x3c, 0xe9, 0xcc, 0x1e, 0xc4, 0x1e, 0x43, 0xcf, 0x9e,
	0x9c, 0xc4, 0x7e, 0x6b, 0xb7, 0xb5, 0xd7, 0xe7, 0x5d, 0xa2, 0x8f, 0x63, 0xf6, 0x29, 0xf4, 0xed,
	0x56, 0xbe, 0xcc, 0xfc, 0xf6, 0x6e, 0x6b, 0x6f, 0xc8, 0xad, 0xec, 0xbb, 0x65, 0xc6, 0x9e, 0x02,
	0xb8, 0x4d, 0x91, 0x49, 0x7f, 0x8b, 0x90, 0x56, 0xfc, 0x9d, 0xc8, 0x24, 0xfb, 0x09, 0xc0, 0x54,
	0x44, 0xef, 0xe7, 0xa5, 0x5a, 0xe6, 0xb1, 0x0f, 0xb4, 0xdd, 0xe0, 0xb0, 0x6f, 0x2b, 0xf8, 0x5c,
	0x89, 0xd4, 0xbf, 0xb7, 0xdb, 0xda, 0xf3, 0x0e, 0x83, 0xfd, 0x8f, 0x3e, 0x77, 0xdf, 0xdd, 0xf8,
	0x8d, 0x12, 0xa9, 0x3b, 0x02, 0x97, 0xec, 0x6b, 0xe8, 0x46, 0x22, 0x93, 0xa5, 0xd0, 0x7e, 0x67,
	0x77, 0x6b, 0xcf, 0x3b, 0xfc, 0x7c, 0x23, 0x7e, 0x4c, 0x72, 0xc7, 0xf9, 0x4c, 0xf1, 0x0a, 0xc3,
	0xbe, 0x81, 0xbe, 0x96, 0x32, 0x0e, 0x93, 0x7c, 0xa6, 0xfc, 0x6d, 0xba, 0xc0, 0x67, 0x1b, 0x15,
	0x9c, 0x49, 0x19, 0x13, 0xbc, 0xa7, 0xdd, 0x8a, 0xbd, 0x04, 0x2f, 0x5a, 0x48, 0xad, 0xc3, 0xa9,
	0x12, 0x65, 0xec, 0xf7, 0x48, 0xc3, 0x35, 0x57, 0x40, 0xd9, 0x23, 0x14, 0xe5, 0x10, 0xd5, 0x6b,
	0xf6, 0x1d, 0x0c, 0x0b, 0x61, 0x8c, 0x2c, 0xf3, 0x10, 0x2d, 0x53, 0xf8, 0x7d, 0x7a, 0xca, 0x97,
	0x1b, 0xf5, 0x1c, 0x25, 0xa5, 0x59, 0x4c, 0x2c, 0xe4, 0x0d, 0x22, 0xf8, 0xa0, 0x68, 0x50, 0xec,
	0x25, 0x40, 0x5c, 0xaa, 0x22, 0x34, 0x62, 0x9a, 0x4a, 0xbf, 0x4b, 0xda, 0x7e, 0x76, 0x2b, 0x6d,
	0xbc, 0x8f, 0xc0, 0x73, 0xc4, 0xb1, 0x5f, 0xc0, 0x3d, 0x0c, 0x27, 0xdf, 0xbb, 0x8d, 0x63, 0xde,
	0xca, 0x52, 0x71, 0x92, 0x67, 0x5f, 0x43, 0xaf, 0x8a, 0x39, 0x7f, 0x70, 0x83, 0x4d, 0xcf, 0x9d,
	0x20, 0xaf, 0x21, 0x6c, 0x0c, 0x20, 0x73, 0x99, 0xad, 0xe7, 0x6a, 0x59, 0x68, 0x7f, 0x78, 0x83,
	0x57, 0x5f, 0xa1, 0xa8, 0xb5, 0x41, 0x03, 0x16, 0xfc, 0xab, 0x85, 0x41, 0x7e, 0x4a, 0x19, 0xc0,
	0x65, 0xa4, 0xca, 0x98, 0xfd, 0x14, 0xbc, 0x59, 0x29, 0x32, 0x19, 0x46, 0x6a, 0x99, 0x1b, 0x8a,
	0xf3, 0x21, 0x07, 0x62, 0x8d, 0x91, 0xc3, 0x38, 0x78, 0x25, 0x89, 0x86, 0x66, 0x5d, 0x48, 0x0a,
	0xf6, 0x9d, 0xc3, 0xbd, 0x0d, 0x27, 0xbf, 0x6a, 0xea, 0x3e, 0x5f, 0x17, 0xf2, 0x45, 0xf7, 0x94,
	0x87, 0x67, 0x17, 0xa2, 0xe0, 0x50, 0xd6, 0x4c, 0xb6, 0x03, 0xed, 0xd5, 0x01, 0x65, 0xc6, 0x90,
	0xb7, 0x57, 0x07, 0x48, 0xaf, 0x0f, 0x28, 0xd4, 0x87, 0xbc, 0xbd, 0x26, 0x7a, 0xf5, 0xcc, 0xef,
	0xb8, 0xfd, 0x67, 0xb4, 0xff, 0x8c, 0x22, 0x11, 0xf7, 0x9f, 0xb1, 0x1f, 0x41, 0x37, 0x5a, 0x24,
	0x05, 0x26, 0x66, 0x97, 0x98, 0xdb, 0x48, 0x1e, 0xc7, 0xc1, 0x3f, 0xaf, 0x3c, 0xb0, 0x48, 0xc5,
	0x9a, 0x7d, 0x06, 0x03, 0x9b, 0x4e, 0x33, 0x95, 0xc6, 0xb2, 0x74, 0x99, 0xec, 0x11, 0xef, 0x35,
	0xb1, 0xae, 0x24, 0x7a, 0xfb, 0x6a, 0xa2, 0xdf, 0x90, 0xcb, 0x0c, 0xee, 0x61, 0xd4, 0xbb, 0xab,
	0xd3, 0x9a, 0xfd, 0x1a, 0xba, 0xf6, 0xa9, 0x55, 0xf2, 0x6d, 0x8e, 0xb1, 0xa6, 0xb5, 0x78, 0x85,
	0x0a, 0xfe, 0xda, 0x82, 0x07, 0x1f, 0x89, 0x66, 0xf6, 0x16, 0x60, 0x8a, 0x4c, 0xeb, 0x88, 0x16,
	0x39, 0x62, 0x77, 0x93, 0x23, 0xc6, 0x8b, 0xa4, 0xb0, 0x0e, 0x18, 0x9f, 0x87, 0xef, 0x54, 0x2e,
	0x79, 0x9f, 0xc0, 0x64, 0xff, 0xdf, 0xc2, 0xd0, 0x6a, 0x72, 0xf9, 0xe1, 0xb7, 0xef, 0x92, 0x0c,
	0x83, 0x69, 0x83, 0x0a, 0xfe, 0xd1, 0x02, 0xaf, 0x51, 0x86, 0xd8, 0xcf, 0x61, 0x98, 0x26, 0x59,
	0x62, 0x42, 0x2d, 0x23, 0x95, 0xc7, 0xda, 0x86, 0xd4, 0x8b, 0xd6, 0x01, 0x1f, 0x10, 0xff, 0xcc,
	0xb2, 0x59, 0x00, 0x9e, 0x93, 0x33, 0xb2, 0xd0, 0xb6, 0x88, 0xa2, 0x14, 0x58, 0x29, 0x64, 0xb2,
	0x57, 0xe0, 0x45, 0x2a, 0x4d, 0x65, 0x64, 0x12, 0x95, 0x6b, 0x7f, 0xeb, 0xa6, 0x5a, 0x56, 0xcb,
	0xf2, 0x26, 0x0e, 0x63, 0x5c, 0x1b, 0x51, 0x86, 0x3a, 0x52, 0xa5, 0xd4, 0xfe, 0xbd, 0xdd, 0x2d,
	0x8c, 0x71, 0x64, 0x9d, 0x11, 0x27, 0xf8, 0x1e, 0x06, 0x4d, 0x74, 0x33, 0xbe, 0x5a, 0xcd, 0xf8,
	0x62, 0x8f, 0x60, 0x3b, 0x5f, 0x66, 0x53, 0x59, 0xba, 0xa2, 0xef, 0x28, 0xe4, 0x5f, 0xc8, 0x64,
	0xbe, 0x30, 0x2e, 0xa8, 0x1d, 0x15, 0xfc, 0xa9, 0x45, 0x9a, 0xeb, 0x1a, 0xcb, 0xbe, 0x82, 0x6e,
	0xa1, 0x74, 0x98, 0x25, 0x39, 0x69, 0xf6, 0x36, 0x3a, 0x70, 0x72, 0x34, 0x96, 0x69, 0x3a, 0x51,
	0x9a, 0x6f, 0x17, 0x4a, 0x9f, 0x26, 0x79, 0x0d, 0x15, 0x2b, 0x3a, 0xfc, 0xd6, 0x50, 0xb1, 0x0a,
	0xfe, 0xde, 0x02, 0xb8, 0xac, 0xd4, 0x18, 0xd4, 0xb3, 0x64, 0x25, 0xe3, 0x90, 0x62, 0xd7, 0xbe,
	0xb0, 0x4f, 0x1c, 0x14, 0x61, 0x6f, 0x61, 0x24, 0x52, 0xf4, 0xad, 0x30, 0xc9, 0x07, 0x69, 0x85,
	0x6c, 0x80, 0x3c, 0xbd, 0xb6, 0x0b, 0xf0, 0xfb, 0x0d, 0x18, 0x69, 0x7a, 0x0c, 0xd4, 0x14, 0xa8,
	0x4b, 0x5a, 0xc3, 0x74, 0x91, 0xc6, 0x26, 0xf9, 0x05, 0xec, 0x2c, 0xb5, 0xbb, 0x42, 0x98, 0x26,
	0xda, 0x38, 0xb7, 0x0c, 0x90, 0x8b, 0xe0, 0x93, 0x44, 0x9b, 0xe0, 0x2b, 0xd8, 0xb6, 0xba, 0xeb,
	0x4c, 0x6b, 0x35, 0x32, 0xed, 0x53, 0xd7, 0xa7, 0x28, 0x37, 0x6d, 0xe2, 0xd2, 0x79, 0x98, 0x9a,
	0xc1, 0x5f, 0xda, 0x64, 0xfa, 0xcb, 0x7e, 0xf2, 0x10, 0x3a, 0x17, 0x49, 0x6c, 0x16, 0xa4, 0xa2,
	0xc3, 0x2d, 0x81, 0x9e, 0x5b, 0x58, 0xcf, 0xb5, 0x89, 0xed, 0x28, 0xbc, 0xba, 0x9a, 0xcd, 0xb4,
	0x34, 0xe1, 0x8a, 0xae, 0xde, 0xe1, 0x5d, 0x4b, 0xff, 0xbe, 0xb1, 0xb5, 0xa6, 0xc4, 0xaf, 0xb7,
	0xfe, 0xc0, 0x38, 0xdc, 0x8f, 0xe5, 0x4c, 0x2c, 0x53, 0x13, 0xce, 0x4b, 0xf1, 0x21, 0x31, 0x6b,
	0xaa, 0x5a, 0x3b, 0x87, 0x3f, 0xde, 0x94, 0xa7, 0x67, 0x49, 0x2c, 0x5f, 0x78, 0xf8, 0x0d, 0x8f,
	0x94, 0x31, 0x2a, 0xe3, 0x3b, 0x4e, 0xc3, 0x1b, 0xab, 0x80, 0x3d, 0x87, 0x4e, 0x24, 0xd3, 0xb4,
	0xaa, 0x26, 0x4f, 0xaf, 0xf5, 0x3a, 0xb7, 0xb2, 0x6c, 0x0f, 0x06, 0x33, 0x91, 0xa6, 0x49, 0x3e,
	0x0f, 0x93, 0x3c, 0x31, 0x54, 0x26, 0x7b, 0x2f, 0x3a, 0x33, 0x91, 0x6a, 0xc9, 0x3d, 0xb7, 0x75,
	0x9c, 0x27, 0x26, 0xf8, 0xdb, 0x36, 0xda, 0x18, 0xb1, 0x2c, 0x80, 0x7e, 0xa2, 0x43, 0x11, 0xa1,
	0xff, 0xc8, 0x4a, 0x35, 0xa2, 0x97, 0xe8, 0x6f, 0x89, 0xcd, 0x0e, 0x61, 0xab, 0x50, 0xfa, 0xd6,
	0x11, 0x88, 0xc2, 0x38, 0xd1, 0xe0, 0xad, 0xc2, 0x54, 0xac, 0x65, 0xe9, 0xb2, 0x38, 0xb8, 0x16,
	0x7a, 0x82, 0x92, 0xbc, 0x1f, 0x55, 0x4b, 0xb6, 0x0b, 0x03, 0x7c, 0x47, 0x58, 0xa5, 0xa5, 0x2d,
	0xb8, 0x80, 0xbc, 0xb1, 0x4d, 0xcd, 0xd7, 0xe0, 0xb9, 0x9a, 0xa6, 0x92, 0xdc, 0xb8, 0x16, 0x7b,
	0xcb, 0x8a, 0x66, 0xeb, 0xea, 0x04, 0x81, 0x38, 0x25, 0xd0, 0x49, 0x56, 0xcd, 0x83, 0xbb, 0xa8,
	0xe9, 0x23, 0xd0, 0x6a, 0x39, 0x80, 0xd1, 0x65, 0x05, 0x72, 0xba, 0x3e, 0x69, 0x5a, 0xf4, 0xfe,
	0xe5, 0xb6, 0x45, 0x9c, 0xc0, 0xc0, 0x85, 0x4c, 0xa8, 0x93, 0x58, 0x52, 0xf7, 0xbb, 0x53, 0xdc,
	0x78, 0x0e, 0x8e, 0x3c, 0xf6, 0x1b, 0x00, 0x23, 0x53, 0x59, 0xa8, 0xd2, 0xc8, 0xd2, 0xcd, 0x70,
	0x37, 0x7b, 0xab, 0x81, 0x61, 0xcf, 0x81, 0x55, 0x54, 0x18, 0x4b, 0xed, 0xde, 0x70, 0x25, 0x8e,
	0x46, 0x95, 0xc0, 0x4b, 0xa9, 0xed, 0x23, 0xbe, 0x00, 0x28, 0x31, 0x7d, 0xc2, 0x0b, 0x91, 0xa6,
	0x34, 0xdb, 0xd6, 0xc2, 0x7d, 0xda, 0xf8, 0x5e, 0xa4, 0xd8, 0x22, 0xbc, 0x29, 0xdd, 0xd9, 0x8a,
	0x79, 0x4d, 0x31, 0xb0, 0x3b, 0x24, 0x57, 0x0d, 0x6c, 0xf6, 0x68, 0x76, 0xe7, 0x81, 0xad, 0x32,
	0xec, 0xe8, 0x48, 0xa6, 0xe6, 0xbc, 0x14, 0xb9, 0x4e, 0x85, 0x91, 0x13, 0xa5, 0xfd, 0x87, 0xb7,
	0x34, 0xc8, 0x68, 0xfa, 0x3f, 0xc8, 0xe0, 0xcf, 0x6d, 0x6c, 0x77, 0x75, 0x8c, 0x6e, 0x6e, 0x15,
	0x01, 0x78, 0xd3, 0x54, 0x45, 0xef, 0xb1, 0x10, 0xc4, 0xb6, 0x3c, 0x75, 0xa8, 0xbf, 0x11, 0xf7,
	0x0d, 0x32, 0xd9, 0xaf, 0xa0, 0x83, 0xbe, 0xd6, 0x37, 0xe6, 0x04, 0x9d, 0x85, 0x8e, 0xe5, 0x16,
	0xc0, 0xf6, 0x60, 0x74, 0xa5, 0x83, 0xe3, 0xf9, 0x76, 0x5e, 0xda, 0x69, 0x76, 0xe7, 0xe3, 0x98,
	0x3d, 0x81, 0xde, 0x42, 0x7c, 0x90, 0xb1, 0x52, 0xa5, 0xdf, 0x47, 0x4b, 0xf3, 0x9a, 0xc6, 0xc4,
	0xa4, 0xd1, 0xda, 0x4e, 0xfa, 0xbd, 0x1b, 0x26, 0x5a, 0x9a, 0x42, 0x68, 0xd4, 0xef, 0xcf, 0xab,
	0x65, 0xf0, 0x39, 0x75, 0xff, 0xea, 0x7a, 0x58, 0x64, 0xed, 0x7b, 0x5d, 0x91, 0x25, 0x22, 0xf8,
	0x0e, 0x85, 0x6a, 0xb8, 0x15, 0xc2, 0x89, 0xbe, 0x16, 0xc2, 0xf1, 0xe6, 0x21, 0x74, 0x92, 0x3c,
	0x96, 0x2b, 0x57, 0x88, 0x2d, 0x81, 0x5c, 0x3b, 0x99, 0xda, 0x22, 0x6c, 0x89, 0xe0, 0x3f, 0x34,
	0xe7, 0x35, 0x3d, 0x8e, 0x4d, 0xad, 0x61, 0x0b, 0xd7, 0xd4, 0x8a, 0xda, 0x0c, 0x27, 0x50, 0xfd,
	0x0c, 0x34, 0xe7, 0xd8, 0x3b, 0x8c, 0x4f, 0x9e, 0x83, 0xd3, 0x00, 0xf5, 0x4b, 0xe8, 0xa0, 0x9b,
	0xed, 0x2c, 0x71, 0xdd, 0x24, 0x4f, 0xc5, 0x09, 0x4d, 0x66, 0xe5, 0xb1, 0x8d, 0xa5, 0x49, 0xfe,
	0x9e, 0x32, 0xb2, 0xc3, 0x69, 0x8d, 0xfd, 0x24, 0x13, 0xab, 0x10, 0x23, 0x96, 0xf2, 0xab, 0xc3,
	0xbb, 0x99, 0x58, 0xbd, 0x2c, 0x55, 0x11, 0xfc, 0x0e, 0xfb, 0x76, 0xa5, 0x63, 0x73, 0xac, 0xd5,
	0x56, 0xb7, 0x53, 0x89, 0x25, 0xd8, 0xe3, 0xab, 0x43, 0x09, 0x06, 0x5f, 0x35, 0x97, 0x24, 0xd8,
	0x1b, 0x2f, 0x7f, 0x12, 0xd0, 0x78, 0xf4, 0x9b, 0x70, 0x39, 0x5a, 0xf6, 0x79, 0x9f, 0x38, 0xf4,
	0xdc, 0x47, 0xb0, 0x4d, 0x84, 0xa6, 0x39, 0xa0, 0xc3, 0x1d, 0xc5, 0x02, 0x18, 0x1a, 0x29, 0xb2,
	0x10, 0xe7, 0x12, 0xea, 0xe1, 0x18, 0xc7, 0x7d, 0xee, 0x21, 0x73, 0xa2, 0x34, 0xb6, 0xf0, 0x2f,
	0xbf, 0x81, 0x4f, 0xfe, 0xef, 0xaf, 0x80, 0x79, 0x50, 0xfd, 0x17, 0x8c, 0x7e, 0xc0, 0x06, 0xd0,
	0x3b, 0xe5, 0xe1, 0x38, 0x95, 0xa2, 0x1c, 0xb5, 0xd8, 0x0e, 0xc0, 0x29, 0x0f, 0x69, 0x78, 0x8f,
	0xe4, 0xa8, 0x7d, 0x34, 0xf8, 0x23, 0xd0, 0x2f, 0x3b, 0xfd, 0xa6, 0xff, 0x37, 0x00, 0x00, 0xff,
	0xff, 0x30, 0xd1, 0x76, 0x86, 0x0c, 0x10, 0x00, 0x00,
}
