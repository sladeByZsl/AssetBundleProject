// Code generated by protoc-gen-go. DO NOT EDIT.
// source: msg_id_define.proto

package matchproto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EModuleTypeIndex int32

const (
	EModuleTypeIndex_MOD_Login       EModuleTypeIndex = 1
	EModuleTypeIndex_MOD_Editor      EModuleTypeIndex = 2
	EModuleTypeIndex_MOD_BI          EModuleTypeIndex = 3
	EModuleTypeIndex_MOD_SceneModule EModuleTypeIndex = 4098
)

var EModuleTypeIndex_name = map[int32]string{
	1:    "MOD_Login",
	2:    "MOD_Editor",
	3:    "MOD_BI",
	4098: "MOD_SceneModule",
}

var EModuleTypeIndex_value = map[string]int32{
	"MOD_Login":       1,
	"MOD_Editor":      2,
	"MOD_BI":          3,
	"MOD_SceneModule": 4098,
}

func (x EModuleTypeIndex) Enum() *EModuleTypeIndex {
	p := new(EModuleTypeIndex)
	*p = x
	return p
}

func (x EModuleTypeIndex) String() string {
	return proto.EnumName(EModuleTypeIndex_name, int32(x))
}

func (x *EModuleTypeIndex) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EModuleTypeIndex_value, data, "EModuleTypeIndex")
	if err != nil {
		return err
	}
	*x = EModuleTypeIndex(value)
	return nil
}

func (EModuleTypeIndex) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_af35d0fb4d73e4f9, []int{0}
}

type EMessageId int32

const (
	EMessageId_MSG_EditorLogin_Request         EMessageId = 65536
	EMessageId_MSG_EditorLogin_Response        EMessageId = 69632
	EMessageId_MSG_JoinGame_Request            EMessageId = 65539
	EMessageId_MSG_JoinGame_Response           EMessageId = 69635
	EMessageId_MSG_M3LevelSync_Request         EMessageId = 131072
	EMessageId_MSG_M3LevelSync_Response        EMessageId = 135168
	EMessageId_MSG_M3LevelLock_Request         EMessageId = 131073
	EMessageId_MSG_M3LevelLock_Response        EMessageId = 135169
	EMessageId_MSG_M3LevelUnlock_Request       EMessageId = 131076
	EMessageId_MSG_M3LevelUnlock_Response      EMessageId = 135172
	EMessageId_MSG_M3LevelCreate_Request       EMessageId = 131074
	EMessageId_MSG_M3LevelCreate_Response      EMessageId = 135170
	EMessageId_MSG_M3LevelCopy_Request         EMessageId = 131075
	EMessageId_MSG_M3LevelCopy_Response        EMessageId = 135171
	EMessageId_MSG_M3LeveDelete_Request        EMessageId = 131077
	EMessageId_MSG_M3LeveDelete_Response       EMessageId = 135173
	EMessageId_MSG_M3LeveMove_Request          EMessageId = 131078
	EMessageId_MSG_M3LeveMove_Response         EMessageId = 135174
	EMessageId_MSG_M3LevelVerify_Request       EMessageId = 131079
	EMessageId_MSG_M3LevelVerify_Response      EMessageId = 135175
	EMessageId_MSG_M3LevelSetting_Request      EMessageId = 131080
	EMessageId_MSG_M3LevelSetting_Response     EMessageId = 135176
	EMessageId_MSG_M3LevelImport_Request       EMessageId = 131081
	EMessageId_MSG_M3LevelImport_Response      EMessageId = 135177
	EMessageId_MSG_M3LevelCopyLock_Request     EMessageId = 131082
	EMessageId_MSG_M3LevelBatchDelete_Request  EMessageId = 131083
	EMessageId_MSG_M3LevelBatchDelete_Response EMessageId = 135179
	EMessageId_MSG_M3LevelBatchUnlock_Request  EMessageId = 131084
	EMessageId_MSG_M3LevelBatchUnlock_Response EMessageId = 135180
	EMessageId_MSG_M3LeveBatchMove_Request     EMessageId = 131085
	EMessageId_MSG_M3LeveBatchMove_Response    EMessageId = 135181
	EMessageId_MSG_M3LevelBatchCopy_Request    EMessageId = 131086
	EMessageId_MSG_M3LevelBatchCopy_Response   EMessageId = 135182
	EMessageId_MSG_M3LevelModifySync_Request   EMessageId = 131087
	EMessageId_MSG_M3BIPanelInfo_Request       EMessageId = 196608
	EMessageId_MSG_M3BIPanelInfo_Response      EMessageId = 200704
	EMessageId_MSG_Ping_Request                EMessageId = 268566530
	EMessageId_MSG_Ping_Response               EMessageId = 268570626
	EMessageId_MSG_ClientInternal_Mask         EMessageId = 251658240
	EMessageId_MSG_NetConnectFail_Notice       EMessageId = 251658241
	EMessageId_MSG_NetDisconnected_Notice      EMessageId = 251658242
)

var EMessageId_name = map[int32]string{
	65536:     "MSG_EditorLogin_Request",
	69632:     "MSG_EditorLogin_Response",
	65539:     "MSG_JoinGame_Request",
	69635:     "MSG_JoinGame_Response",
	131072:    "MSG_M3LevelSync_Request",
	135168:    "MSG_M3LevelSync_Response",
	131073:    "MSG_M3LevelLock_Request",
	135169:    "MSG_M3LevelLock_Response",
	131076:    "MSG_M3LevelUnlock_Request",
	135172:    "MSG_M3LevelUnlock_Response",
	131074:    "MSG_M3LevelCreate_Request",
	135170:    "MSG_M3LevelCreate_Response",
	131075:    "MSG_M3LevelCopy_Request",
	135171:    "MSG_M3LevelCopy_Response",
	131077:    "MSG_M3LeveDelete_Request",
	135173:    "MSG_M3LeveDelete_Response",
	131078:    "MSG_M3LeveMove_Request",
	135174:    "MSG_M3LeveMove_Response",
	131079:    "MSG_M3LevelVerify_Request",
	135175:    "MSG_M3LevelVerify_Response",
	131080:    "MSG_M3LevelSetting_Request",
	135176:    "MSG_M3LevelSetting_Response",
	131081:    "MSG_M3LevelImport_Request",
	135177:    "MSG_M3LevelImport_Response",
	131082:    "MSG_M3LevelCopyLock_Request",
	131083:    "MSG_M3LevelBatchDelete_Request",
	135179:    "MSG_M3LevelBatchDelete_Response",
	131084:    "MSG_M3LevelBatchUnlock_Request",
	135180:    "MSG_M3LevelBatchUnlock_Response",
	131085:    "MSG_M3LeveBatchMove_Request",
	135181:    "MSG_M3LeveBatchMove_Response",
	131086:    "MSG_M3LevelBatchCopy_Request",
	135182:    "MSG_M3LevelBatchCopy_Response",
	131087:    "MSG_M3LevelModifySync_Request",
	196608:    "MSG_M3BIPanelInfo_Request",
	200704:    "MSG_M3BIPanelInfo_Response",
	268566530: "MSG_Ping_Request",
	268570626: "MSG_Ping_Response",
	251658240: "MSG_ClientInternal_Mask",
	251658241: "MSG_NetConnectFail_Notice",
	251658242: "MSG_NetDisconnected_Notice",
}

var EMessageId_value = map[string]int32{
	"MSG_EditorLogin_Request":         65536,
	"MSG_EditorLogin_Response":        69632,
	"MSG_JoinGame_Request":            65539,
	"MSG_JoinGame_Response":           69635,
	"MSG_M3LevelSync_Request":         131072,
	"MSG_M3LevelSync_Response":        135168,
	"MSG_M3LevelLock_Request":         131073,
	"MSG_M3LevelLock_Response":        135169,
	"MSG_M3LevelUnlock_Request":       131076,
	"MSG_M3LevelUnlock_Response":      135172,
	"MSG_M3LevelCreate_Request":       131074,
	"MSG_M3LevelCreate_Response":      135170,
	"MSG_M3LevelCopy_Request":         131075,
	"MSG_M3LevelCopy_Response":        135171,
	"MSG_M3LeveDelete_Request":        131077,
	"MSG_M3LeveDelete_Response":       135173,
	"MSG_M3LeveMove_Request":          131078,
	"MSG_M3LeveMove_Response":         135174,
	"MSG_M3LevelVerify_Request":       131079,
	"MSG_M3LevelVerify_Response":      135175,
	"MSG_M3LevelSetting_Request":      131080,
	"MSG_M3LevelSetting_Response":     135176,
	"MSG_M3LevelImport_Request":       131081,
	"MSG_M3LevelImport_Response":      135177,
	"MSG_M3LevelCopyLock_Request":     131082,
	"MSG_M3LevelBatchDelete_Request":  131083,
	"MSG_M3LevelBatchDelete_Response": 135179,
	"MSG_M3LevelBatchUnlock_Request":  131084,
	"MSG_M3LevelBatchUnlock_Response": 135180,
	"MSG_M3LeveBatchMove_Request":     131085,
	"MSG_M3LeveBatchMove_Response":    135181,
	"MSG_M3LevelBatchCopy_Request":    131086,
	"MSG_M3LevelBatchCopy_Response":   135182,
	"MSG_M3LevelModifySync_Request":   131087,
	"MSG_M3BIPanelInfo_Request":       196608,
	"MSG_M3BIPanelInfo_Response":      200704,
	"MSG_Ping_Request":                268566530,
	"MSG_Ping_Response":               268570626,
	"MSG_ClientInternal_Mask":         251658240,
	"MSG_NetConnectFail_Notice":       251658241,
	"MSG_NetDisconnected_Notice":      251658242,
}

func (x EMessageId) Enum() *EMessageId {
	p := new(EMessageId)
	*p = x
	return p
}

func (x EMessageId) String() string {
	return proto.EnumName(EMessageId_name, int32(x))
}

func (x *EMessageId) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EMessageId_value, data, "EMessageId")
	if err != nil {
		return err
	}
	*x = EMessageId(value)
	return nil
}

func (EMessageId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_af35d0fb4d73e4f9, []int{1}
}

func init() {
	proto.RegisterEnum("FunPlus.Common.Config.EModuleTypeIndex", EModuleTypeIndex_name, EModuleTypeIndex_value)
	proto.RegisterEnum("FunPlus.Common.Config.EMessageId", EMessageId_name, EMessageId_value)
}

func init() { proto.RegisterFile("msg_id_define.proto", fileDescriptor_af35d0fb4d73e4f9) }

var fileDescriptor_af35d0fb4d73e4f9 = []byte{
	// 610 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x94, 0xcb, 0x6e, 0xd3, 0x4e,
	0x14, 0xc6, 0xd5, 0xff, 0x3f, 0x42, 0xe6, 0xa8, 0x80, 0x19, 0x5a, 0xe8, 0xfd, 0xc2, 0x65, 0xd3,
	0x45, 0x37, 0xbc, 0x41, 0xd2, 0x8b, 0x8c, 0xea, 0x52, 0x11, 0x60, 0xc1, 0xc6, 0xb2, 0xec, 0x93,
	0x30, 0xaa, 0x3d, 0x13, 0xec, 0x49, 0xd5, 0xec, 0xa6, 0xe9, 0x9d, 0x5e, 0x78, 0x05, 0xbf, 0x19,
	0xaf, 0x82, 0x5c, 0x4f, 0x26, 0xf6, 0x38, 0xdd, 0xd9, 0xfa, 0x7e, 0xe7, 0x3b, 0xdf, 0x1c, 0x9f,
	0x31, 0xbc, 0x8a, 0xd3, 0xae, 0x47, 0x43, 0x2f, 0xc4, 0x0e, 0x65, 0xb8, 0xd9, 0x4b, 0xb8, 0xe0,
	0x64, 0x76, 0xa7, 0xcf, 0x0e, 0xa2, 0x7e, 0xba, 0xd9, 0xe2, 0x71, 0xcc, 0xd9, 0x66, 0x8b, 0xb3,
	0x0e, 0xed, 0x6e, 0xb4, 0xc1, 0xde, 0x76, 0x79, 0xd8, 0x8f, 0xf0, 0xeb, 0xa0, 0x87, 0x0e, 0x0b,
	0xf1, 0x98, 0x3c, 0x83, 0xa7, 0xee, 0xe7, 0x2d, 0x6f, 0x8f, 0x77, 0x29, 0xb3, 0xa7, 0xc8, 0x73,
	0x80, 0xfc, 0x75, 0x3b, 0xa4, 0x82, 0x27, 0xf6, 0x7f, 0x04, 0xe0, 0x49, 0xfe, 0xde, 0x74, 0xec,
	0xff, 0xc9, 0x0c, 0xbc, 0xc8, 0x9f, 0xdb, 0x01, 0x32, 0x2c, 0x6c, 0xec, 0xe1, 0xda, 0xc6, 0x5f,
	0x00, 0xd8, 0x76, 0x31, 0x4d, 0xfd, 0x2e, 0x3a, 0x21, 0x59, 0x86, 0x37, 0x6e, 0x7b, 0x57, 0x19,
	0x3c, 0xb8, 0x7a, 0x5f, 0xf0, 0x57, 0x1f, 0x53, 0x61, 0x4b, 0xd9, 0x20, 0x2b, 0x30, 0x57, 0x97,
	0xd3, 0x1e, 0x67, 0x29, 0xda, 0x32, 0x6b, 0x90, 0x05, 0x98, 0xc9, 0xf5, 0x4f, 0x9c, 0xb2, 0x5d,
	0x3f, 0x46, 0x5d, 0x7b, 0x2a, 0x1b, 0x64, 0x11, 0x66, 0x0d, 0x4d, 0x15, 0x9e, 0x66, 0x8d, 0x51,
	0x5f, 0xf7, 0xe3, 0x1e, 0x1e, 0x61, 0xd4, 0x1e, 0xb0, 0xa0, 0xd4, 0xd7, 0x1a, 0xf5, 0xad, 0xca,
	0xba, 0xaf, 0x65, 0x94, 0xef, 0xf1, 0xe0, 0x50, 0x97, 0x9f, 0xd4, 0xca, 0x95, 0xac, 0xca, 0x4f,
	0x32, 0x8b, 0xac, 0xc2, 0x7c, 0x49, 0xff, 0xc6, 0xa2, 0xb2, 0xc1, 0x99, 0xb4, 0xc8, 0x1a, 0x2c,
	0x4c, 0x02, 0x94, 0xc5, 0x59, 0xcd, 0xa2, 0x95, 0xa0, 0x2f, 0xc6, 0xc7, 0x1f, 0xd6, 0x2c, 0x34,
	0xa0, 0x2c, 0x86, 0xb5, 0x43, 0xb4, 0x78, 0x6f, 0x50, 0x9a, 0x9f, 0x79, 0x08, 0x25, 0xeb, 0x11,
	0x1a, 0xfa, 0x16, 0x46, 0x58, 0x0a, 0x70, 0x2e, 0x8d, 0x84, 0x5a, 0x57, 0x06, 0xe7, 0x99, 0x45,
	0x96, 0xe0, 0xf5, 0x18, 0x70, 0xf9, 0xd1, 0xb8, 0xfc, 0x42, 0x1a, 0xe9, 0x94, 0xaa, 0x8a, 0x2f,
	0x6a, 0xe7, 0xff, 0x8e, 0x09, 0xed, 0x8c, 0xe3, 0x5f, 0xd6, 0xce, 0xaf, 0x01, 0x65, 0x71, 0x99,
	0x99, 0x44, 0x1b, 0x85, 0xa0, 0xac, 0xab, 0x3d, 0xae, 0xa4, 0x45, 0xd6, 0x61, 0x71, 0x22, 0xa1,
	0x4c, 0xae, 0x6a, 0x39, 0x9c, 0xb8, 0xc7, 0x13, 0xa1, 0x3d, 0xae, 0x6b, 0x39, 0x34, 0xa0, 0x2c,
	0xae, 0x33, 0xb3, 0x4b, 0x3e, 0xe8, 0xca, 0x42, 0xfd, 0x96, 0x16, 0x79, 0x0f, 0x2b, 0x25, 0xa4,
	0xe9, 0x8b, 0xe0, 0xa7, 0x31, 0xf1, 0x1b, 0x69, 0x91, 0x0f, 0xb0, 0xfa, 0x28, 0xa5, 0xfa, 0xdd,
	0x64, 0x13, 0xcd, 0x8c, 0x15, 0xbc, 0x9d, 0x6c, 0x66, 0xee, 0xe1, 0xad, 0x19, 0xfe, 0x81, 0xaa,
	0x7c, 0xc9, 0x3b, 0x69, 0x91, 0xb7, 0xb0, 0x34, 0x19, 0x51, 0x36, 0x77, 0x99, 0xc1, 0x14, 0xdd,
	0x2a, 0x0b, 0x79, 0x2f, 0x2d, 0xf2, 0x0e, 0x96, 0x1f, 0x61, 0x94, 0xd1, 0x7d, 0x66, 0x42, 0x2e,
	0x0f, 0x69, 0x67, 0x50, 0xb9, 0xde, 0x7f, 0xca, 0xab, 0xd9, 0x74, 0x0e, 0x7c, 0x86, 0x91, 0xc3,
	0x3a, 0xbc, 0x74, 0xff, 0xa7, 0xc7, 0x1f, 0xad, 0x0a, 0xe8, 0x3f, 0xc0, 0x34, 0x99, 0x03, 0x3b,
	0x27, 0x0e, 0xca, 0x2b, 0x33, 0x94, 0x57, 0x72, 0x8a, 0xcc, 0xc3, 0xcb, 0x92, 0xa2, 0xef, 0x5b,
	0x2e, 0xad, 0x14, 0x3b, 0xdd, 0x8a, 0x28, 0x32, 0xe1, 0x30, 0x81, 0x09, 0xf3, 0x23, 0xcf, 0xf5,
	0xd3, 0x43, 0x5b, 0x4a, 0x79, 0x4c, 0xd6, 0x8a, 0x5c, 0xfb, 0x28, 0x5a, 0x9c, 0x31, 0x0c, 0xc4,
	0x8e, 0x4f, 0x23, 0x6f, 0x9f, 0x0b, 0x1a, 0xa0, 0x7d, 0x92, 0x13, 0xeb, 0x45, 0xb0, 0x7d, 0x14,
	0x5b, 0x34, 0x0d, 0x0a, 0x08, 0xc3, 0x11, 0x32, 0x94, 0xf2, 0xb8, 0x39, 0xfd, 0x03, 0xe2, 0x7c,
	0x36, 0x0f, 0xff, 0xf6, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x0d, 0xfb, 0x5d, 0x3e, 0xf1, 0x05,
	0x00, 0x00,
}
