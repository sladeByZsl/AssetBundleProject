// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hero.proto

package matchproto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//关卡英雄信息
type PBLevelHero struct {
	Heroes               []*PBHero `protobuf:"bytes,1,rep,name=heroes" json:"heroes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *PBLevelHero) Reset()         { *m = PBLevelHero{} }
func (m *PBLevelHero) String() string { return proto.CompactTextString(m) }
func (*PBLevelHero) ProtoMessage()    {}
func (*PBLevelHero) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5c1be3f86b99613, []int{0}
}

func (m *PBLevelHero) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBLevelHero.Unmarshal(m, b)
}
func (m *PBLevelHero) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBLevelHero.Marshal(b, m, deterministic)
}
func (m *PBLevelHero) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBLevelHero.Merge(m, src)
}
func (m *PBLevelHero) XXX_Size() int {
	return xxx_messageInfo_PBLevelHero.Size(m)
}
func (m *PBLevelHero) XXX_DiscardUnknown() {
	xxx_messageInfo_PBLevelHero.DiscardUnknown(m)
}

var xxx_messageInfo_PBLevelHero proto.InternalMessageInfo

func (m *PBLevelHero) GetHeroes() []*PBHero {
	if m != nil {
		return m.Heroes
	}
	return nil
}

//单个英雄信息
type PBHero struct {
	HeroId               *int32       `protobuf:"varint,1,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	HeroIcon             *string      `protobuf:"bytes,2,opt,name=hero_icon,json=heroIcon" json:"hero_icon,omitempty"`
	Skill                *PBHeroSkill `protobuf:"bytes,3,opt,name=skill" json:"skill,omitempty"`
	Best                 *bool        `protobuf:"varint,4,opt,name=best" json:"best,omitempty"`
	Available            *bool        `protobuf:"varint,5,opt,name=available" json:"available,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PBHero) Reset()         { *m = PBHero{} }
func (m *PBHero) String() string { return proto.CompactTextString(m) }
func (*PBHero) ProtoMessage()    {}
func (*PBHero) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5c1be3f86b99613, []int{1}
}

func (m *PBHero) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBHero.Unmarshal(m, b)
}
func (m *PBHero) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBHero.Marshal(b, m, deterministic)
}
func (m *PBHero) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBHero.Merge(m, src)
}
func (m *PBHero) XXX_Size() int {
	return xxx_messageInfo_PBHero.Size(m)
}
func (m *PBHero) XXX_DiscardUnknown() {
	xxx_messageInfo_PBHero.DiscardUnknown(m)
}

var xxx_messageInfo_PBHero proto.InternalMessageInfo

func (m *PBHero) GetHeroId() int32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *PBHero) GetHeroIcon() string {
	if m != nil && m.HeroIcon != nil {
		return *m.HeroIcon
	}
	return ""
}

func (m *PBHero) GetSkill() *PBHeroSkill {
	if m != nil {
		return m.Skill
	}
	return nil
}

func (m *PBHero) GetBest() bool {
	if m != nil && m.Best != nil {
		return *m.Best
	}
	return false
}

func (m *PBHero) GetAvailable() bool {
	if m != nil && m.Available != nil {
		return *m.Available
	}
	return false
}

//英雄技能信息
type PBHeroSkill struct {
	InitItem             *PBItemChip `protobuf:"bytes,1,opt,name=init_item,json=initItem" json:"init_item,omitempty"`
	CreateItem           *PBItemChip `protobuf:"bytes,2,opt,name=create_item,json=createItem" json:"create_item,omitempty"`
	DestroyItem          *PBItemChip `protobuf:"bytes,3,opt,name=destroy_item,json=destroyItem" json:"destroy_item,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PBHeroSkill) Reset()         { *m = PBHeroSkill{} }
func (m *PBHeroSkill) String() string { return proto.CompactTextString(m) }
func (*PBHeroSkill) ProtoMessage()    {}
func (*PBHeroSkill) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5c1be3f86b99613, []int{2}
}

func (m *PBHeroSkill) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBHeroSkill.Unmarshal(m, b)
}
func (m *PBHeroSkill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBHeroSkill.Marshal(b, m, deterministic)
}
func (m *PBHeroSkill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBHeroSkill.Merge(m, src)
}
func (m *PBHeroSkill) XXX_Size() int {
	return xxx_messageInfo_PBHeroSkill.Size(m)
}
func (m *PBHeroSkill) XXX_DiscardUnknown() {
	xxx_messageInfo_PBHeroSkill.DiscardUnknown(m)
}

var xxx_messageInfo_PBHeroSkill proto.InternalMessageInfo

func (m *PBHeroSkill) GetInitItem() *PBItemChip {
	if m != nil {
		return m.InitItem
	}
	return nil
}

func (m *PBHeroSkill) GetCreateItem() *PBItemChip {
	if m != nil {
		return m.CreateItem
	}
	return nil
}

func (m *PBHeroSkill) GetDestroyItem() *PBItemChip {
	if m != nil {
		return m.DestroyItem
	}
	return nil
}

//用于创建或销毁的棋子信息
type PBItemChip struct {
	ChipId               *uint32  `protobuf:"varint,1,opt,name=chip_id,json=chipId" json:"chip_id,omitempty"`
	Number               *int32   `protobuf:"varint,2,opt,name=number" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PBItemChip) Reset()         { *m = PBItemChip{} }
func (m *PBItemChip) String() string { return proto.CompactTextString(m) }
func (*PBItemChip) ProtoMessage()    {}
func (*PBItemChip) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5c1be3f86b99613, []int{3}
}

func (m *PBItemChip) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBItemChip.Unmarshal(m, b)
}
func (m *PBItemChip) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBItemChip.Marshal(b, m, deterministic)
}
func (m *PBItemChip) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBItemChip.Merge(m, src)
}
func (m *PBItemChip) XXX_Size() int {
	return xxx_messageInfo_PBItemChip.Size(m)
}
func (m *PBItemChip) XXX_DiscardUnknown() {
	xxx_messageInfo_PBItemChip.DiscardUnknown(m)
}

var xxx_messageInfo_PBItemChip proto.InternalMessageInfo

func (m *PBItemChip) GetChipId() uint32 {
	if m != nil && m.ChipId != nil {
		return *m.ChipId
	}
	return 0
}

func (m *PBItemChip) GetNumber() int32 {
	if m != nil && m.Number != nil {
		return *m.Number
	}
	return 0
}

//英雄系统全局编辑器配置
type PBHeroPowerConfig struct {
	Heroes               []*PBHero `protobuf:"bytes,7,rep,name=heroes" json:"heroes,omitempty"`
	LevelMaxHeroes       *int32    `protobuf:"varint,9,opt,name=level_max_heroes,json=levelMaxHeroes" json:"level_max_heroes,omitempty"`
	InitChipId           []uint32  `protobuf:"varint,1,rep,name=init_chip_id,json=initChipId" json:"init_chip_id,omitempty"`
	FinalChipId          []uint32  `protobuf:"varint,2,rep,name=final_chip_id,json=finalChipId" json:"final_chip_id,omitempty"`
	DestroyChipId        []uint32  `protobuf:"varint,3,rep,name=destroy_chip_id,json=destroyChipId" json:"destroy_chip_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *PBHeroPowerConfig) Reset()         { *m = PBHeroPowerConfig{} }
func (m *PBHeroPowerConfig) String() string { return proto.CompactTextString(m) }
func (*PBHeroPowerConfig) ProtoMessage()    {}
func (*PBHeroPowerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5c1be3f86b99613, []int{4}
}

func (m *PBHeroPowerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBHeroPowerConfig.Unmarshal(m, b)
}
func (m *PBHeroPowerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBHeroPowerConfig.Marshal(b, m, deterministic)
}
func (m *PBHeroPowerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBHeroPowerConfig.Merge(m, src)
}
func (m *PBHeroPowerConfig) XXX_Size() int {
	return xxx_messageInfo_PBHeroPowerConfig.Size(m)
}
func (m *PBHeroPowerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PBHeroPowerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PBHeroPowerConfig proto.InternalMessageInfo

func (m *PBHeroPowerConfig) GetHeroes() []*PBHero {
	if m != nil {
		return m.Heroes
	}
	return nil
}

func (m *PBHeroPowerConfig) GetLevelMaxHeroes() int32 {
	if m != nil && m.LevelMaxHeroes != nil {
		return *m.LevelMaxHeroes
	}
	return 0
}

func (m *PBHeroPowerConfig) GetInitChipId() []uint32 {
	if m != nil {
		return m.InitChipId
	}
	return nil
}

func (m *PBHeroPowerConfig) GetFinalChipId() []uint32 {
	if m != nil {
		return m.FinalChipId
	}
	return nil
}

func (m *PBHeroPowerConfig) GetDestroyChipId() []uint32 {
	if m != nil {
		return m.DestroyChipId
	}
	return nil
}

func init() {
	proto.RegisterType((*PBLevelHero)(nil), "FunPlus.Common.Config.PBLevelHero")
	proto.RegisterType((*PBHero)(nil), "FunPlus.Common.Config.PBHero")
	proto.RegisterType((*PBHeroSkill)(nil), "FunPlus.Common.Config.PBHeroSkill")
	proto.RegisterType((*PBItemChip)(nil), "FunPlus.Common.Config.PBItemChip")
	proto.RegisterType((*PBHeroPowerConfig)(nil), "FunPlus.Common.Config.PBHeroPowerConfig")
}

func init() { proto.RegisterFile("hero.proto", fileDescriptor_d5c1be3f86b99613) }

var fileDescriptor_d5c1be3f86b99613 = []byte{
	// 414 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0xcf, 0x8e, 0xd3, 0x30,
	0x10, 0xc6, 0xe5, 0x66, 0x93, 0x6d, 0x26, 0x0d, 0x7f, 0x2c, 0x01, 0x91, 0x00, 0x29, 0xe4, 0x80,
	0x72, 0xca, 0xa1, 0x12, 0x12, 0x17, 0x38, 0x24, 0x2b, 0xb4, 0x95, 0x40, 0x8a, 0xcc, 0x8d, 0x4b,
	0xe4, 0x26, 0x5e, 0x62, 0xe1, 0xd8, 0x55, 0xe2, 0x2e, 0xcb, 0x2b, 0xf1, 0x42, 0xdc, 0x79, 0x12,
	0x64, 0x3b, 0x6d, 0x39, 0x00, 0x2a, 0xb7, 0xfa, 0x9b, 0xdf, 0xf7, 0xcd, 0xd4, 0x9e, 0x00, 0xf4,
	0x6c, 0x54, 0xc5, 0x6e, 0x54, 0x5a, 0xe1, 0x47, 0xef, 0xf6, 0xb2, 0x16, 0xfb, 0xa9, 0xa8, 0xd4,
	0x30, 0x28, 0x59, 0x54, 0x4a, 0xde, 0xf0, 0xcf, 0xd9, 0x15, 0x44, 0x75, 0xf9, 0x9e, 0xdd, 0x32,
	0x71, 0xcd, 0x46, 0x85, 0x5f, 0x41, 0x60, 0x3c, 0x6c, 0x4a, 0x50, 0xea, 0xe5, 0xd1, 0xfa, 0x79,
	0xf1, 0x47, 0x5b, 0x51, 0x97, 0x06, 0x27, 0x33, 0x9c, 0x7d, 0x47, 0x10, 0x38, 0x09, 0x3f, 0x81,
	0x4b, 0x23, 0x36, 0xbc, 0x4b, 0x50, 0x8a, 0x72, 0xdf, 0x31, 0x9b, 0x0e, 0x3f, 0x85, 0xd0, 0x15,
	0x5a, 0x25, 0x93, 0x45, 0x8a, 0xf2, 0x90, 0x2c, 0x6d, 0xa9, 0x55, 0x12, 0xbf, 0x06, 0x7f, 0xfa,
	0xc2, 0x85, 0x48, 0xbc, 0x14, 0xe5, 0xd1, 0x3a, 0xfb, 0x67, 0xdb, 0x8f, 0x86, 0x24, 0xce, 0x80,
	0x31, 0x5c, 0x6c, 0xd9, 0xa4, 0x93, 0x8b, 0x14, 0xe5, 0x4b, 0x62, 0x7f, 0xe3, 0x67, 0x10, 0xd2,
	0x5b, 0xca, 0x05, 0xdd, 0x0a, 0x96, 0xf8, 0xb6, 0x70, 0x12, 0xb2, 0x1f, 0xc8, 0xfc, 0xe7, 0x63,
	0x10, 0x7e, 0x0b, 0x21, 0x97, 0x5c, 0x37, 0x5c, 0xb3, 0xc1, 0xce, 0x1c, 0xad, 0x5f, 0xfc, 0xb5,
	0xff, 0x46, 0xb3, 0xa1, 0xea, 0xf9, 0x8e, 0x2c, 0x8d, 0xc7, 0x9c, 0x70, 0x09, 0x51, 0x3b, 0x32,
	0xaa, 0x99, 0x4b, 0x58, 0x9c, 0x9b, 0x00, 0xce, 0x65, 0x33, 0xae, 0x60, 0xd5, 0xb1, 0x49, 0x8f,
	0xea, 0x9b, 0x0b, 0xf1, 0xce, 0x0d, 0x89, 0x66, 0x9b, 0x11, 0xb2, 0x37, 0x00, 0xa7, 0x92, 0x79,
	0x89, 0xb6, 0xe7, 0xbb, 0xc3, 0x4b, 0xc4, 0x24, 0x30, 0xc7, 0x4d, 0x87, 0x1f, 0x43, 0x20, 0xf7,
	0xc3, 0x96, 0x8d, 0x76, 0x56, 0x9f, 0xcc, 0xa7, 0xec, 0x27, 0x82, 0x87, 0xee, 0x62, 0x6a, 0xf5,
	0x95, 0x8d, 0xae, 0xd9, 0x6f, 0x2b, 0x71, 0xf9, 0x1f, 0x2b, 0x81, 0x73, 0x78, 0x20, 0xcc, 0x5a,
	0x35, 0x03, 0xbd, 0x6b, 0xe6, 0x80, 0xd0, 0xb6, 0xbb, 0x67, 0xf5, 0x0f, 0xf4, 0xee, 0xda, 0x91,
	0x29, 0xac, 0xec, 0xfd, 0x9f, 0x86, 0xf5, 0xf2, 0x98, 0x80, 0xd1, 0x2a, 0x37, 0x70, 0x06, 0xf1,
	0x0d, 0x97, 0x54, 0x1c, 0x91, 0x85, 0x45, 0x22, 0x2b, 0xce, 0xcc, 0x4b, 0xb8, 0x7f, 0xb8, 0xc1,
	0x03, 0xe5, 0x59, 0x2a, 0x9e, 0x65, 0xc7, 0x95, 0xab, 0x4f, 0x30, 0x50, 0xdd, 0xf6, 0xf6, 0xab,
	0xf8, 0x15, 0x00, 0x00, 0xff, 0xff, 0xe1, 0xe7, 0xc2, 0x1a, 0x22, 0x03, 0x00, 0x00,
}
